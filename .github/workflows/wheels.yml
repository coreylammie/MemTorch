name: Build
on: [push, pull_request] # Temp- to change to on tag beginning with v.
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, macOS-10.15, ubuntu-20.04]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.0.0a2
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_BUILD_WINDOWS: pip3 install torch==1.8.1+cpu -f https://download.pytorch.org/whl/torch_stable.html --ignore-installed
          CIBW_BEFORE_BUILD_MACOS: pip3 install torch==1.8.1 -f https://download.pytorch.org/whl/torch_stable.html --ignore-installed
          CIBW_BEFORE_BUILD_LINUX: pip3 install torch==1.8.1+cpu -f https://download.pytorch.org/whl/torch_stable.html --ignore-installed
          CIBW_REPAIR_WHEEL_COMMAND: ""
          CIBW_BUILD: cp37-* cp38-* cp39-*
          CIBW_SKIP: "*-manylinux_i686 *-win32"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
      - uses: actions/upload-artifact@v2
        with:
          name: wheelhouse
          path: ./wheelhouse/*.whl
      - name: Upload files to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./wheelhouse/*.whl
          tag: ${{ github.ref }}
  build_sdist:
    name: Build source distributions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"
      - uses: Jimver/cuda-toolkit@v0.2.2
        name: Install CUDA
        id: cuda-toolkit
        with:
          cuda: "11.2.2"
      - name: Build memtorch and memtorch-cpu sdist
        run: |
          python -m pip install -r requirements.txt
          python setup.py sdist
          sed -i 's/CUDA = False/CUDA = True/g' setup.py
          python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          name: wheelhouse
          path: dist/*.tar.gz
      - name: Upload files to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*.tar.gz
          tag: ${{ github.ref }}
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: test #${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
